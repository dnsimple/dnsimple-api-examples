name: Terraform Plan
on:
  pull_request:
    paths:
      - 'terraform/sentinel/**'
      - '.github/workflows/sentinel-demo-plan.yml'
  workflow_dispatch:

env:
  TF_CLOUD_ORGANIZATION: "DNSimple"
  TF_WORKSPACE: "sentinel-demo"
  TF_TOKEN_app_terraform_io: "${{ secrets.TF_API_TOKEN }}"

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: "./terraform/sentinel"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Comment on pull request for Formatting
        if: ${{ steps.fmt.outcome != 'success' }}
        uses: actions/github-script@v7
        env:
          FMT: "terraform\n${{ steps.fmt.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          retries: 3
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`

            Format check failed ‚ùå.

            <details><summary>Show Format</summary>

            \`\`\`\n
            ${process.env.FMT}
            \`\`\`

            </details>

            To fix formatting errors run \`terraform fmt\`.

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Comment on pull request for Plan
        uses: actions/github-script@v7
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
